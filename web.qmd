---
title: seguid calculator
format: html
---
```{=html}
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="/static/stylesheet.css">
    <link rel="shortcut icon" href="/static/favicon.ico">
    <!-- <script src="/js/seguid.js"></script> -->
    <script
        src="https://rawcdn.githack.com/seguid/seguid-javascript/8f110ff8b3ae6532cd9f6589f667a545fbecc304/seguid.js"></script>
    <title>SEGUID CALCULATOR</title>
</head>

<body>

    <div>
        <div class="row">
            <div class="col">
                Biological sequences in raw format only. All except GATCRYWSMKHBVDN will be
                ignored. Complement and reverse complement will be calculated based on the {DNA} alphabet.
            </div>
        </div>

        <div class="row fs-6 font-monospace">
            <div class="col-md-5">
                linear single-strand
            </div>
            <div class="col-md-6" id="lsseguid" style="white-space: nowrap">

            </div>
        </div>
        <div class="row fs-6 font-monospace">
            <div class="col-md-5">
                circular single-strand
            </div>
            <div class="col-md-6" id="csseguid" style="white-space: nowrap">
            </div>
        </div>
        <div class="row fs-6 font-monospace">
            <div class="col-md-5">
                linear double-strand
            </div>
            <div class="col-md-6" id="ldseguid" style="white-space: nowrap">
            </div>
        </div>
        <div class="row fs-6 font-monospace">
            <div class="col-md-5">
                circular double-strand
            </div>
            <div class="col-md-6" id="cdseguid" style="white-space: nowrap">
            </div>
        </div>
        <div class="row fs-6 font-monospace">
            <div class="col-md-5">
                Length
            </div>
            <div class="col-md-6" id="length">
            </div>
        </div>
        <div class="row fs-6 font-monospace">
            <div class="col-md-5">
                Characters
            </div>
            <div class="col-md-6" id="chars">
            </div>
        </div>
        <div class="row">
            <textarea class="form-control mb-3" id="sequence" rows="10" cols="120"></textarea>
            <div class="d-flex justify-content-start">
                <div class="col-auto">
                    <button class="btn btn-success me-2" id="reverse">Reverse</button>
                </div>
                <div class="col-auto">
                    <button class="btn btn-success me-2" id="complement">Complement</button>
                </div>
                <div class="col-auto">
                    <button class="btn btn-success me-2" id="reverse_complement">Reverse Complement</button>
                </div>
                <div class="col-auto">
                    <button class="btn btn-danger" id="clear">Clear</button>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    function makeComplementTable(alphabet = "{DNA-extended}") {
        pairs = ALPHABETS[alphabet];
        const table = {};
        for (p of pairs.split(",")) {
            table[p[0]] = p[1];
            table[p[1]] = p[0];
        }
        return table;
    }

    const complement_table = makeComplementTable();
    const purify = (s) => {
        return s.toUpperCase().replace(/[^GATCRYWSMKHBVDN]/g, '');
    }
    const complement = (s) => {
        const chars = s.split('');
        for (let i = 0; i < chars.length; i++) {
            const char = chars[i];
            if (complement_table[char]) {
                chars[i] = complement_table[char];
            }
        }
        return chars.join('');
    }

    const reverse = (s) => {
        return s.split('').reverse().join('');
    }

    const reverse_complement = (s) => {
        return complement(reverse(s));
    }

    const sequence = document.getElementById("sequence");
    const update = async () => {
        sequence.value = purify(sequence.value);
        if (sequence.value.length === 0) {
            let el = document.getElementById("lsseguid");
            el.innerHTML = "";
            el = document.getElementById("csseguid");
            el.innerHTML = "";
            el = document.getElementById("ldseguid");
            el.innerHTML = "";
            el = document.getElementById("cdseguid");
            el.innerHTML = "";
        } else {
            let el = document.getElementById("lsseguid");
            el.innerHTML = await lsseguid(sequence.value, alphabet = "{DNA-extended}");
            el = document.getElementById("csseguid");
            el.innerHTML = await csseguid(sequence.value, alphabet = "{DNA-extended}");
            el = document.getElementById("ldseguid");
            el.innerHTML = await ldseguid(sequence.value, reverse_complement(sequence.value), alphabet = "{DNA-extended}");
            el = document.getElementById("cdseguid");
            el.innerHTML = await cdseguid(sequence.value, reverse_complement(sequence.value), alphabet = "{DNA-extended}");
        }
        el = document.getElementById("length");
        el.innerHTML = sequence.value.length;
        el = document.getElementById("chars");
        el.innerHTML = [...new Set(sequence.value.toUpperCase().split("").sort())].join(" ");

    }
    sequence.addEventListener("input", update);

    let button = document.getElementById("reverse");
    button.addEventListener("click", function () {
        sequence.value = reverse(sequence.value);
        update();
    });
    button = document.getElementById("complement");
    button.addEventListener("click", function () {
        sequence.value = complement(sequence.value);
        update();
    });
    button = document.getElementById("reverse_complement");
    button.addEventListener("click", function () {
        sequence.value = reverse_complement(sequence.value);
        update();
    });
    button = document.getElementById("clear");
    button.addEventListener("click", function () {
        sequence.value = "";
        update();
    });

    update();
</script>

</html>
```