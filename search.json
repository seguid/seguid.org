[
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Babnigg, György, and Carol S Giometti. 2006. “A database of unique protein sequence identifiers for proteome studies.” Proteomics 6 (16): 4514–22. https://doi.org/10.1002/pmic.200600032."
  },
  {
    "objectID": "quality.html",
    "href": "quality.html",
    "title": "Quality",
    "section": "",
    "text": "It is critical that any SEGUID checksums generated are correct. We have composed a set of unit tests, seguid-tests, that validate the correctness of any implementation. All SEGUID v2 implementations have to pass these tests before being released. We rely on continuous integration (CI) tests on GitHub Actions to check every modification to the different codebases. Any future implementation in another programming language has to undergo the same strict testing."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SEGUID v2: Checksums for Linear, Circular, Single- and Double-Stranded Biological Sequences",
    "section": "",
    "text": "WARNING: This is work under construction! Please do not use this in production until we’ve offically released SEGUID v2.\nThe SEquence Globally Unique IDentifier (SEGUID) checksum (Babnigg and Giometti 2006) was introduced to provide a stable, unifying key for the same sequence in different databases facilitating linking protein sequences across databases. SEGUID v2 (2024) extends the original SEGUID method to support also double-stranded sequences (e.g. DNA) and circular sequences (e.g. proteins and double-stranded DNA)."
  },
  {
    "objectID": "index.html#example-seguid-v2-for-circular-double-stranded-dna",
    "href": "index.html#example-seguid-v2-for-circular-double-stranded-dna",
    "title": "SEGUID v2: Checksums for Linear, Circular, Single- and Double-Stranded Biological Sequences",
    "section": "Example: SEGUID v2 for circular double-stranded DNA",
    "text": "Example: SEGUID v2 for circular double-stranded DNA\nSEGUID v2 is designed to be invariant to (i) rotation and (ii) duality (see above figure). No matter where we chose to “start” the dsDNA sequence, and no matter which strand we chose to the Watson strand, the checksum is identical.\n\nPythonRCLI (Python)CLI (R)\n\n\n&gt;&gt;&gt; from seguid import *\n\n&gt;&gt;&gt; ldseguid(\"ATATGCC\", \"GGCATAT\")\n'ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g'\n\n&gt;&gt;&gt; ldseguid(\"GGCATAT\", \"ATATGCC\")          ## Same swapping Watson and Crick \n'ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g'\n\n&gt;&gt;&gt; cdseguid(\"TATGCCA\", \"TGGCATA\")          ## Same rotatating one basepair\n'cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g'\n\n\n&gt; library(seguid)\n\n&gt; ldseguid(\"ATATGCC\", \"GGCATAT\")\n[1] \"ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\"\n\n&gt;&gt;&gt; ldseguid(\"GGCATAT\", \"ATATGCC\")          ## Same swapping Watson and Crick \n[1] \"ldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\"\n\n&gt; cdseguid(\"TATGCCA\", \"TGGCATA\")            ## Same rotatating one basepair\n[1] \"cdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\"\n\n\n$ echo -e 'ATATGCC\\nTATACGG' | python -m seguid --type=ldseguid\nldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\n\n$ ## Same swapping Watson and Crick\n$ echo -e 'TATACGG\\nATATGCC' | python -m seguid --type=ldseguid\nldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\n\n$ ## Same rotatating one basepair\n$ echo -e 'TATGCCA\\nATACGGT' | python -m seguid --type=cdseguid\ncdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\nAn alternative, to “piping” the input sequence to the SEGUID tool, is to use Bash syntax &lt;&lt;&lt; and $'...\\n...' to escape the newline, i.e. python -m seguid --type=ldseguid &lt;&lt;&lt; $'ATATGCC\\nTATACGG'.\n\n\n$ echo -e 'ATATGCC\\nTATACGG' | Rscript -e seguid::seguid --type=ldseguid\nldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\n\n$ ## Same swapping Watson and Crick\n$ echo -e 'TATACGG\\nATATGCC' | Rscript -e seguid::seguid --type=ldseguid\nldseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\n\n$ ## Same rotatating one basepair\n$ echo -e 'TATGCCA\\nATACGGT' | Rscript -e seguid::seguid --type=cdseguid\ncdseguid=UnHLvKWgR_kAuUDz5D5zDYcYA7g\nAn alternative, to “piping” the input sequence to the SEGUID tool, is to use Bash syntax &lt;&lt;&lt; and $'...\\n...' to escape the newline, i.e. Rscript -e seguid::seguid --type=ldseguid &lt;&lt;&lt; $'ATATGCC\\nTATACGG'."
  },
  {
    "objectID": "index.html#availability",
    "href": "index.html#availability",
    "title": "SEGUID v2: Checksums for Linear, Circular, Single- and Double-Stranded Biological Sequences",
    "section": "Availability",
    "text": "Availability\nImplementations of above SEGUID methods are currently available for Python and R;\n\nseguid (Python package)\nseguid (R package)"
  },
  {
    "objectID": "demo-webr.html",
    "href": "demo-webr.html",
    "title": "Demo: R package seguid",
    "section": "",
    "text": "This is an online demo of the R package seguid and the SEGUID v2 algorithm. The below examples run an R instance completely within your web browser based on webR and WebAssembly.\nTo run the examples, click ‘Run Code’. Feel free to edit any of them as you prefer. Nothing you type or enter below leaves your web browser. See seguid for the details on these functions, including what type of arguments they take."
  },
  {
    "objectID": "demo-webr.html#examples",
    "href": "demo-webr.html#examples",
    "title": "Demo: R package seguid",
    "section": "Examples",
    "text": "Examples\n\nLinear, single-stranded DNA\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nLinear, double-stranded DNA\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nStaggered linear, double-stranded DNA\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nCircular, single-stranded DNA\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nCircular, double-stranded DNA\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nProtein\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExpanded epigenetic double-stranded DNA\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  }
]